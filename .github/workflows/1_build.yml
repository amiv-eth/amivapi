name: Build

on: 
  workflow_call:
    inputs:
      push:
        description: 'Push Docker image to the registry.'
        default: false
        required: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    needs: test

    env:
      IMAGE_NAME: amiveth/amivapi

    steps:
      - uses: actions/checkout@v3
      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2
      # Login against a Docker registry except on PR
      - name: Log into Docker Hub registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # Extract metadata (tags, labels) for Docker
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: type=raw,value=latest
      # Build and push Docker image with Buildx (don't push on PR)
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: .
          pull: true
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    needs: build
    container: amiveth/service-update-helper:latest

    strategy:
      matrix:
        deploy-url:
          - https://deploy-cluster.amiv.ethz.ch
          - https://deploy-leela.amiv.ethz.ch
        deploy-service:
          - amivapi
          - amivapi-cron
          - amivapi-dev
          - amivapi-dev-cron
        exclude:
          - deploy-url: 'https://deploy-leela.amiv.ethz.ch'
            deploy-service: 'amivapi-dev'
          - deploy-url: 'https://deploy-leela.amiv.ethz.ch'
            deploy-service: 'amivapi-dev-cron'

    env:
      CI_DEPLOY_URL: ${{ matrix.deploy-url }}
      CI_DEPLOY_SERVICE: ${{ matrix.deploy-service }}
      CI_DEPLOY_TOKEN: ${{ secrets.CI_DEPLOY_TOKEN }}

    steps:
      - run: ./

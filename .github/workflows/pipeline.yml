name: Pipeline

on:
  schedule:
    - cron: '5 4 * * 1'
  push:
    branches: [ master ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.9']

    services:
      mongodb:
        image: mongo:5.0.8
        env:
          MONGO_INITDB_DATABASE: amivapi
        options: >-
          --health-cmd mongo
          --health-start-period 20s
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 27017:27017

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox tox-gh-actions setuptools
      - name: Create MongoDB User
        run: mongo test_amivapi --eval 'db.createUser({user:"test_user",pwd:"test_pw",roles:["readWrite"]});'
      - name: Test with tox
        run: tox
      - uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: unittests
          fail_ci_if_error: true
          verbose: true

  build:
    runs-on: ubuntu-latest
    needs: test

    env:
      IMAGE_NAME: amiveth/amivapi

    steps:
      - uses: actions/checkout@v3
      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf
      # Login against a Docker registry except on PR
      - name: Log into Docker Hub registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # Extract metadata (tags, labels) for Docker
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.IMAGE_NAME }}
      # Build and push Docker image with Buildx (don't push on PR)
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: .
          pull: true
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    needs: build
    container: amiveth/service-update-helper:latest

    strategy:
      matrix:
        deploy-url:
          - https://deploy-cluster.amiv.ethz.ch
          - https://deploy-leela.amiv.ethz.ch
        deploy-service:
          - amivapi
          - amivapi-cron
          - amivapi-dev
          - amivapi-dev-cron
        exclude:
          - deploy-url: 'https://deploy-leela.amiv.ethz.ch'
            deploy-service: 'amivapi-dev'
          - deploy-url: 'https://deploy-leela.amiv.ethz.ch'
            deploy-service: 'amivapi-dev-cron'

    env:
      CI_DEPLOY_URL: ${{ matrix.deploy-url }}
      CI_DEPLOY_SERVICE: ${{ matrix.deploy-service }}
      CI_DEPLOY_TOKEN: ${{ secrets.CI_DEPLOY_TOKEN }}

    steps:
      - run: ./
